# Copyright (c) 2024-2025 Roni Raihan
# Copyright (c) 2021-2024 kitsune.ONE team.
# basic script by kitsune.ONE team. see < https://github.com/kitsune-ONE-team/KITSUNETSUKI-Asset-Tools >.
# Some code functions, generated by AI ChatGPT < https://chat.openai.com/ >

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see < https://www.gnu.org/licenses/ >.


bl_info = {
    "name": "VRM Converter",
    "author": "TRPHB Animation (Roni Raihan) and Multiple Authors",
    "version": (0, 4, 5),
    "blender": (4, 1, 0),
    "location": "File > Import-Export",
    "description": "Exports and Import VRM",
    "warning": "",
    "doc_url": "",
    "category": "Import-Export",
}
#------------------------------------------------
import bpy
import webbrowser

from . import operatorvrm
from . import generate
#from . import dubecres
from . import impvrm

from bpy.types import Operator, AddonPreferences
from bpy.props import StringProperty

class Another_version_panel(AddonPreferences):
    bl_idname = __name__
    
    def draw(self, context):
        layout = self.layout
        layout.label(text="Another version")
        layout.operator("vetr.open_version_webpage")

class Another_version_webpage(bpy.types.Operator):
    bl_idname = "vetr.open_version_webpage"
    bl_label = "See Another Version (in Webpage)"
    
    url: bpy.props.StringProperty(name="URL", default="https://trakteer.id/trphbanimation/showcase/export-modelrig-di-blender-menjadi-vrm-addon-blender-40-ijTXu")

    def execute(self, context):
        webbrowser.open(self.url)
        return {'FINISHED'}

def register():
    bpy.utils.register_class(Another_version_webpage)
    bpy.utils.register_class(Another_version_panel)
    operatorvrm.register()
    generate.register()
    #dubecres.register()
    impvrm.register()

def unregister():
    bpy.utils.unregister_class(Another_version_webpage)
    bpy.utils.unregister_class(Another_version_panel)
    operatorvrm.unregister()
    generate.unregister()
    #dubecres.unregister()
    impvrm.unregister()

if __name__ == "__main__":
    register()
